[{"/Users/apple/Desktop/Dropbox/weather-react/src/index.js":"1","/Users/apple/Desktop/Dropbox/weather-react/src/reportWebVitals.js":"2","/Users/apple/Desktop/Dropbox/weather-react/src/App.js":"3","/Users/apple/Desktop/Dropbox/weather-react/src/Weather.js":"4"},{"size":500,"mtime":1607628482533,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1607431607569,"results":"7","hashOfConfig":"6"},{"size":170,"mtime":1607698245014,"results":"8","hashOfConfig":"6"},{"size":3676,"mtime":1607698009981,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"98y3n3",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"/Users/apple/Desktop/Dropbox/weather-react/src/index.js",[],"/Users/apple/Desktop/Dropbox/weather-react/src/reportWebVitals.js",[],"/Users/apple/Desktop/Dropbox/weather-react/src/App.js",[],"/Users/apple/Desktop/Dropbox/weather-react/src/Weather.js",["19"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Loader from \"react-loader-spinner\";\nimport \"./Weather.css\";\nexport default function Weather(props) {\n  const [city, setCity] = useState(props.city);\n  const [weatherData, setWeatherData] = useState({ ready: false });\n  function handleResponse(response) {\n    setWeatherData({\n      ready: true,\n      date: new Date(response.data.dt * 1000),\n      imgUrl: `http://openweathermap.org/img/wn/${response.data.weather[0].icon}@2x.png`,\n      city: response.data.name,\n      humidity: response.data.main.humidity,\n      wind: response.data.wind.speed,\n      temperature: Math.round(response.data.main.temp),\n    });\n  }\n  function search() {\n    let apiKey = \"4ab5028f202d824f0f01ee605dd0d893\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n  function changeCity(event) {\n    event.preventDefault();\n    setCity(event.target.value);\n  }\n  if (weatherData.ready) {\n    return (\n      <div className=\"Weather\">\n        <div className=\"weather-app\">\n          <div className=\"row\">\n            <div className=\"col-8\">\n              <span className=\"lastUpdate\">\n                <p> Last update: {weatherData.date.getDay()}</p>\n              </span>\n            </div>\n            <div className=\"col-4\">\n              <span className=\"currentTime\"></span>\n            </div>\n          </div>\n          <h2>\n            {weatherData.degrees}\n            <span className=\"units\">\n              <a href=\"/\" className=\"active\">\n                °C{\" \"}\n              </a>\n              |<a href=\"/\">°F</a>\n            </span>\n            <img src={weatherData.imgUrl} className=\"icon\" alt=\"\" />\n          </h2>\n          <div className=\"row\">\n            <div className=\"col-7\">\n              <h1>{weatherData.city}</h1>\n            </div>\n            <div className=\"class-5\">\n              <ul>\n                <li>{weatherData.temperature}</li>\n                <li>Humidity:{weatherData.humidity}</li>\n                <li>Wind:{weatherData.wind} km/h</li>\n              </ul>\n            </div>\n          </div>\n          <div className=\"row\"></div>\n          <div className=\"row\">\n            <div className=\"offset-1 col-10\">\n              <div className=\"enterCityForm\">\n                <form>\n                  <div className=\"form-row\">\n                    <div className=\"col-8\">\n                      <input\n                        type=\"search\"\n                        className=\"form-control\"\n                        placeholder=\"Enter city...\"\n                        autocomplete=\"off\"\n                        onChange={changeCity}\n                      />\n                    </div>\n                    <div className=\"col-3\">\n                      <input\n                        type=\"submit\"\n                        value=\"Search\"\n                        className=\"form-control btn btn-primary shadow-sm\"\n                      />\n                    </div>\n                    <div className=\"col-1\">\n                      <button className=\"clButton\">CL</button>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n        <small>\n          <a\n            href=\"https://github.com/slijderink/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Open-source code\n          </a>{\" \"}\n          by Liza Slijderink\n        </small>\n      </div>\n    );\n  } else {\n    search();\n    return <Loader type=\"Rings\" color=\"red\" height={80} width={80} />;\n  }\n}",{"ruleId":null,"fatal":true,"severity":2,"message":"20","line":93,"column":25},"Parsing error: Identifier 'Weather' has already been declared\n\n\u001b[0m \u001b[90m 91 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 92 | \u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 93 | \u001b[39m\u001b[36mexport\u001b[39m \u001b[36mdefault\u001b[39m \u001b[36mfunction\u001b[39m \u001b[33mWeather\u001b[39m(props){\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 94 | \u001b[39m    \u001b[36mfunction\u001b[39m handleResponse(response){\u001b[0m\n\u001b[0m \u001b[90m 95 | \u001b[39m        alert(\u001b[32m`The weather in ${response.data.name} is ${response.data.main.temp}C`\u001b[39m)\u001b[0m\n\u001b[0m \u001b[90m 96 | \u001b[39m    }\u001b[0m"]